@startuml

class Encry{
--encrypted--
passwd.bin
}

class Update{
updated_comment
}

class Link{
new_url
}

class Extract{
..<i> files generated </i>..
..
new.json
}

package dataframes.df_1 <<Database>> {
class Fields{
df_1
df1_mysql
df1_mysql_q
==
..<i> files generated </i>..
..
df_1.csv
}
}

package dataframes.data2 <<Database>> {
class Merge{
df2_mysql
df_comm3
==
..<i> files generated </i>..
..
df2_mysql_q_d.csv
 }
}

package dataframes.df_comm3 <<Database>> {
class DfC3{
df_comm3_mysql
==
..<i> files generated </i>..
..
df_comm3.csv
 }
}

package dataframes.df_case <<Database>> {
class Compare{
df_case_csv
df_comm3_csv_single_df
df_case_csv_df
it_is
==
..<i> files generated </i>..
..
df_case.csv
df_comm3_csv_single_df
df_case_csv_df
 }
}


package dataframes.new_data <<Database>> {
class Case{
extract_newdata_case_csv 
extract_case_csv
extract_case_csv_df
==
..<i> files generated </i>..
..
new_data.csv
df_case.csv
 }
}

class ID{
find_case_id
find_case_id_csv_d
==
..<i> files generated </i>..
..
find_case_id.csv
 }


class Task{
find_task_id
taskID_add_1
}

class Logs{
response_json_log
}

Update -left-> Encry

Update -right-> Link
Link -right-> Extract
Extract -down-> Fields
Fields -right-> Merge
Merge -right->DfC3
DfC3 -right-> Compare
Compare -down-> Case
Case -down-> ID
Case -down-> Task
Task -down-> Logs


@enduml
